// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectRPG.DataAccess.Data;

#nullable disable

namespace ProjectRPG.DataAccess.Migrations
{
    [DbContext(typeof(RPGDbContext))]
    [Migration("20240405232100_CriacaoBanco")]
    partial class CriacaoBanco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectRPG.Models.Armamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Alcance")
                        .HasColumnType("int");

                    b.Property<int>("Dano")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Equipado")
                        .HasColumnType("bit");

                    b.Property<int>("MunicaoAtual")
                        .HasColumnType("int");

                    b.Property<int>("MunicaoMaxima")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PersonagemId")
                        .HasColumnType("int");

                    b.Property<string>("TipoMunicao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("UsaMunicao")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PersonagemId");

                    b.ToTable("Armas");
                });

            modelBuilder.Entity("ProjectRPG.Models.Atributo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Corpo")
                        .HasColumnType("int");

                    b.Property<int>("Foco")
                        .HasColumnType("int");

                    b.Property<int>("Mente")
                        .HasColumnType("int");

                    b.Property<int>("PersonagemId")
                        .HasColumnType("int");

                    b.Property<int>("Reacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonagemId");

                    b.ToTable("Atributos");
                });

            modelBuilder.Entity("ProjectRPG.Models.Condicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aterrorizado")
                        .HasColumnType("bit");

                    b.Property<bool>("Desnutrido")
                        .HasColumnType("bit");

                    b.Property<bool>("Envenenado")
                        .HasColumnType("bit");

                    b.Property<bool>("Infectado")
                        .HasColumnType("bit");

                    b.Property<bool>("Paralisado")
                        .HasColumnType("bit");

                    b.Property<int>("PersonagemId")
                        .HasColumnType("int");

                    b.Property<bool>("Queimado")
                        .HasColumnType("bit");

                    b.Property<bool>("Sangrando")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PersonagemId");

                    b.ToTable("Condicoes");
                });

            modelBuilder.Entity("ProjectRPG.Models.Equipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("Equipado")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PersonagemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonagemId");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("ProjectRPG.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PersonagemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonagemId");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("ProjectRPG.Models.Personagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aparencia")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Deslocamento")
                        .HasColumnType("int");

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Evasao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("PvAtual")
                        .HasColumnType("int");

                    b.Property<int>("PvTotal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Personagens");
                });

            modelBuilder.Entity("ProjectRPG.Models.Armamento", b =>
                {
                    b.HasOne("ProjectRPG.Models.Personagem", "Personagem")
                        .WithMany()
                        .HasForeignKey("PersonagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personagem");
                });

            modelBuilder.Entity("ProjectRPG.Models.Atributo", b =>
                {
                    b.HasOne("ProjectRPG.Models.Personagem", "Personagem")
                        .WithMany()
                        .HasForeignKey("PersonagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personagem");
                });

            modelBuilder.Entity("ProjectRPG.Models.Condicao", b =>
                {
                    b.HasOne("ProjectRPG.Models.Personagem", "Personagem")
                        .WithMany()
                        .HasForeignKey("PersonagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personagem");
                });

            modelBuilder.Entity("ProjectRPG.Models.Equipamento", b =>
                {
                    b.HasOne("ProjectRPG.Models.Personagem", "Personagem")
                        .WithMany()
                        .HasForeignKey("PersonagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personagem");
                });

            modelBuilder.Entity("ProjectRPG.Models.Item", b =>
                {
                    b.HasOne("ProjectRPG.Models.Personagem", "Personagem")
                        .WithMany()
                        .HasForeignKey("PersonagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personagem");
                });
#pragma warning restore 612, 618
        }
    }
}
